{"version":3,"sources":["serviceWorker.ts","components/Results.tsx","components/WorkshopForm.tsx","pages/Toolpage.tsx","components/NavBar.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Wrapper","styled","Downloads","DownloadButton","Results","props","makeXLSX","bind","arr","this","data","matches","console","log","i","length","obj","tempArr","j","push","concat","ws","XLSX","utils","aoa_to_sheet","wb","book_new","SheetNames","Sheets","wbout","write","bookType","type","buf","ArrayBuffer","view","Uint8Array","charCodeAt","setState","loading","blob","Blob","saveAs","state","onClick","React","Component","UploadDiv","UploadInput","UploadWarning","Separator","SeriesInputDiv","SeriesTitle","Series","SeriesLabel","SeriesNumInput","ButtonDiv","Plus","FaPlusCircle","Minus","FaMinusCircle","SubmitButton","WorkshopForm","series","renderseries","updateSeries","addSeries","deleteSeries","storeFile","parseAndSend","set","numSeries","PrefFile","e","target","dataset","id","parseInt","value","pop","min","max","data-id","onChange","files","reader","FileReader","onload","a","fetch","method","headers","body","JSON","stringify","rows","result","toString","replace","split","EOL","map","row","workshopsToAttend","then","response","json","status","res","readAsBinaryString","accept","required","PageWrapper","Header","Toolpage","NavWrapper","Item","Link","ItemName","Navbar","to","ReactDOM","render","exact","path","component","ToolPage","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcfea4e9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\n\nconst Wrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Downloads = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DownloadButton = styled(\"div\")`\n  margin-top: 3vh;\n  border: black 1.5px solid;\n  text-align: center;\n  padding: 1vh 1vw;\n  align-self: center;\n  cursor: pointer;\n  transition: 0.1s;\n  margin: auto 2vw;\n  &:hover {\n    border: #00b4f5 1.5px solid;\n    color: #00b4f5;\n  }\n`;\n\ninterface ResultsProps {\n  data: any;\n}\n\nexport default class Results extends React.Component<\n  ResultsProps,\n  { loading: any; blob: any }\n> {\n  constructor(props) {\n    super(props);\n    this.makeXLSX = this.makeXLSX.bind(this);\n  }\n\n  makeXLSX() {\n    let arr = [this.props.data[\"columns\"]];\n    let matches = [];\n    console.log(this.props.data[\"matches\"]);\n    for (let i = 0; i < this.props.data[\"matches\"].length; i++) {\n      let obj = this.props.data[\"matches\"][i];\n      let tempArr = [obj[\"Name\"], obj[\"Email\"]];\n      for (let j = 0; j < obj[\"Matches\"].length; j++)\n        tempArr.push(obj[\"Matches\"][j]);\n      matches.push(tempArr);\n    }\n    arr = arr.concat(matches);\n    console.log(arr);\n    let ws = XLSX.utils.aoa_to_sheet(arr);\n    let wb = XLSX.utils.book_new();\n    wb.SheetNames.push(\"Workshop Assignments\");\n    wb.Sheets[\"Workshop Assignments\"] = ws;\n    let wbout = XLSX.write(wb, { bookType: \"xlsx\", type: \"binary\" });\n    var buf = new ArrayBuffer(wbout.length); //convert s to arrayBuffer\n    var view = new Uint8Array(buf); //create uint8array as viewer\n    for (var i = 0; i < wbout.length; i++) view[i] = wbout.charCodeAt(i) & 0xff; //convert to octet\n    this.setState({\n      loading: false,\n      blob: new Blob([buf], { type: \"application/octet-stream\" })\n    });\n  }\n\n  componentWillMount() {\n    this.setState({\n      loading: true\n    });\n    this.makeXLSX();\n    console.log(this.props.data);\n  }\n\n  downloadXLSX() {\n    saveAs(this.state.blob, \"wsAssignments.xlsx\");\n  }\n\n  render() {\n    if (this.state.loading) return <p>LOADING MORE DICK!!!</p>;\n    return (\n      <>\n        <Wrapper>\n          <Downloads>\n            <DownloadButton>Download CSV</DownloadButton>\n            <DownloadButton onClick={this.makeXLSX}>\n              Download Excel\n            </DownloadButton>\n          </Downloads>\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaPlusCircle, FaMinusCircle } from \"react-icons/fa\";\nimport { EOL } from \"os\";\n\nimport Results from \"./Results\";\n\nconst Wrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  border: black solid 2px;\n  padding: 2vw;\n  font-family: \"Montserrat\", sans-serif;\n  width: 40%;\n`;\n\nconst UploadDiv = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n`;\nconst UploadInput = styled(\"input\")``;\n\nconst UploadWarning = styled(\"p\")`\n  font-size: 1vw;\n  margin-right: 2vw;\n`;\n\nconst Separator = styled(\"hr\")`\n  color: black;\n  width: 100%;\n`;\n\nconst SeriesInputDiv = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SeriesTitle = styled(\"p\")``;\n\nconst Series = styled(\"div\")`\n  display: flex;\n  margin-bottom: 1vh;\n  justify-content: space-between;\n  width: 25%;\n`;\n\nconst SeriesLabel = styled(\"p\")`\n  font-size: 1vw;\n  margin: auto 0px;\n`;\n\nconst SeriesNumInput = styled(\"input\")`\n  line-height: 1;\n`;\n\nconst ButtonDiv = styled(\"div\")`\n  display: flex;\n  width: 100%;\n  margin-bottom: 2vh;\n`;\n\nconst Plus = styled(FaPlusCircle)`\n  height: 1.6em;\n  width: 1.6em;\n  cursor: pointer;\n  &:hover {\n    color: #00b4f5;\n  }\n`;\n\nconst Minus = styled(FaMinusCircle)`\n  height: 1.6em;\n  width: 1.6em;\n  margin-right: 10px;\n  cursor: pointer;\n  &:hover {\n    color: #00b4f5;\n  }\n`;\n\nconst SubmitButton = styled(\"div\")`\n  margin-top: 3vh;\n  border: black 1.5px solid;\n  text-align: center;\n  padding: 1vh 1vw;\n  width: 30%;\n  align-self: center;\n  cursor: pointer;\n  transition: 0.1s;\n  &:hover {\n    border: #00b4f5 1.5px solid;\n    color: #00b4f5;\n  }\n`;\n\nexport default class WorkshopForm extends React.Component<\n  {},\n  { numSeries: number; PrefFile: any; matches: any; loading: boolean }\n> {\n  constructor(props) {\n    super(props);\n    this.renderseries = this.renderseries.bind(this);\n    this.updateSeries = this.updateSeries.bind(this);\n    this.addSeries = this.addSeries.bind(this);\n    this.deleteSeries = this.deleteSeries.bind(this);\n    this.storeFile = this.storeFile.bind(this);\n    this.parseAndSend = this.parseAndSend.bind(this);\n    this.set = this.set.bind(this);\n  }\n\n  series = [1];\n\n  componentWillMount() {\n    this.setState({\n      numSeries: 1,\n      PrefFile: null,\n      loading: false\n    });\n  }\n\n  updateSeries(e) {\n    this.series[e.target.dataset.id] = parseInt(e.target.value);\n    console.log(this.series);\n  }\n\n  addSeries() {\n    this.setState({\n      numSeries: this.state.numSeries + 1\n    });\n    this.series.push(1);\n  }\n\n  deleteSeries() {\n    if (this.state.numSeries === 1) return;\n    this.setState({\n      numSeries: this.state.numSeries - 1\n    });\n    this.series.pop();\n  }\n\n  renderseries() {\n    let series = [];\n    for (let i = 0; i < this.state.numSeries; i++) {\n      series.push(\n        <Series>\n          <SeriesLabel>Series {i + 1}</SeriesLabel>\n          <SeriesNumInput\n            type=\"number\"\n            min=\"1\"\n            max=\"100000\"\n            data-id={i}\n            onChange={this.updateSeries}\n          ></SeriesNumInput>\n        </Series>\n      );\n    }\n    return series;\n  }\n\n  storeFile(e) {\n    this.setState({\n      PrefFile: e.target.files[0]\n    });\n  }\n\n  set(value, state) {\n    switch (state) {\n      case \"matches\":\n        this.setState({\n          matches: value\n        });\n        break;\n      case \"loading\":\n        this.setState({\n          loading: value\n        });\n      default:\n        break;\n    }\n  }\n\n  parseAndSend() {\n    let reader = new FileReader();\n    let arr = this.series;\n    let set = this.set;\n    this.setState({\n      loading: true\n    });\n    reader.onload = async function() {\n      await fetch(\"https://thenry3.pythonanywhere.com/api/sort\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          rows: reader.result\n            .toString()\n            .replace(/['\"]+/g, \"\")\n            .split(\"\\r\" + EOL)\n            .map(row => row.split(\",\")),\n          workshopsToAttend: arr\n        })\n      })\n        .then(response =>\n          response.json().then(data => ({\n            data: data,\n            status: response.status\n          }))\n        )\n        .then(res => {\n          if (res.status == 400) console.log(\"YOU FUCKED UP\");\n          else {\n            set(res.data, \"matches\");\n            set(false, \"loading\");\n          }\n        });\n    };\n    reader.readAsBinaryString(this.state.PrefFile);\n  }\n\n  render() {\n    if (this.state.matches)\n      return <Results data={this.state.matches}></Results>;\n    if (this.state.loading) return <p>LOADING MY DICK</p>;\n    return (\n      <>\n        <Wrapper>\n          <UploadDiv>\n            <UploadWarning>\n              File uploaded <strong>MUST</strong> be in CSV format\n            </UploadWarning>\n            <UploadInput\n              type=\"file\"\n              accept=\".csv\"\n              required\n              onChange={this.storeFile}\n            ></UploadInput>\n          </UploadDiv>\n          <Separator></Separator>\n          <SeriesInputDiv>\n            <SeriesTitle>\n              Input the number of workshops that students will be attending for\n              each series\n            </SeriesTitle>\n            <ButtonDiv>\n              <Minus onClick={this.deleteSeries} />\n              <Plus onClick={this.addSeries} />\n            </ButtonDiv>\n            {this.renderseries()}\n          </SeriesInputDiv>\n          <SubmitButton onClick={this.parseAndSend}>Submit</SubmitButton>\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport WorkshopForm from \"../components/WorkshopForm\";\nimport Results from \"../components/Results\";\n\nconst PageWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: \"Montserrat\", sans-serif;\n`;\n\nconst Header = styled(\"p\")`\n  font-size: 3vw;\n  font-weight: bold;\n`;\n\nexport default class Toolpage extends React.Component {\n  render() {\n    return (\n      <>\n        <PageWrapper>\n          <Header>wow ty for using my shit</Header>\n          <WorkshopForm></WorkshopForm>\n        </PageWrapper>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst NavWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst Item = styled(Link)`\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 1.1vw;\n  letter-spacing: 0.1em;\n  color: black;\n  text-decoration: none;\n`;\n\nconst ItemName = styled(\"p\")`\n  margin: auto 1vw;\n  padding: 4vh 2vw;\n  ${Item}:hover & {\n    color: #00b4f5;\n    border-bottom: solid #00b4f5 1px;\n    padding-bottom: 3vh;\n  }\n`;\n\nexport default class Navbar extends React.Component {\n  render() {\n    return (\n      <>\n        <NavWrapper>\n          <Item to=\"/\">\n            <ItemName>Tool</ItemName>\n          </Item>\n          <Item to=\"/guidelines\">\n            <ItemName>Guidelines</ItemName>\n          </Item>\n          <Item to=\"/about\">\n            <ItemName>About</ItemName>\n          </Item>\n        </NavWrapper>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route } from \"react-router\";\n\nimport ToolPage from \"./pages/Toolpage\";\nimport NavBar from \"./components/NavBar\";\n\nReactDOM.render(\n  <>\n    <Router>\n      <NavBar />\n      <Route exact path=\"/\" component={ToolPage}></Route>\n    </Router>\n  </>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}