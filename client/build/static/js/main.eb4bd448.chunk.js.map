{"version":3,"sources":["images/henry.jpg","images/spreadsheet.png","images/form.png","serviceWorker.ts","components/Results.tsx","components/WorkshopForm.tsx","pages/Toolpage.tsx","components/NavBar.tsx","pages/AboutPage.tsx","components/Overlay.tsx","components/GuideCard.tsx","pages/GuidePage.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","Wrapper","styled","Downloads","DownloadButton","Preview","Table","Trow","Results","props","downloadXLSX","bind","downloadCSV","arr","this","data","matches","i","length","obj","tempArr","j","push","concat","ws","XLSX","utils","aoa_to_sheet","wb","book_new","SheetNames","Sheets","wbout","write","bookType","type","buf","ArrayBuffer","view","Uint8Array","charCodeAt","setState","blob","Blob","rows","saveAs","state","csv","join","forEach","row","hiddenLink","document","createElement","href","encodeURI","target","download","click","onClick","map","column","style","border","borderCollapse","padding","item","paddingTop","paddingBottom","React","Component","Guide","UploadDiv","UploadInput","UploadWarning","Separator","SeriesInputDiv","SeriesTitle","Series","SeriesLabel","SeriesNumInput","ButtonDiv","Plus","FaPlusCircle","Minus","FaMinusCircle","SubmitButton","WorkshopForm","series","renderseries","updateSeries","addSeries","deleteSeries","storeFile","parseAndSend","set","numSeries","PrefFile","loading","e","dataset","id","parseInt","value","console","log","pop","min","max","data-id","onChange","files","reader","FileReader","onload","a","fetch","method","headers","body","JSON","stringify","result","toString","replace","split","EOL","workshopsToAttend","then","response","json","status","res","readAsBinaryString","accept","required","PageWrapper","Header","Toolpage","NavWrapper","Item","Link","NavLinks","ItemName","Title","Navbar","pathname","reload","to","refreshTool","Page","ProfilePic","Henry","Quote","Name","AboutPage","DarkBack","Pic","Overlay","currentTarget","getElementById","height","close","src","Card","CardTitle","Point","GuideCard","title","openClose","points","point","overlay","spread","form","GuidePage","Form","Spread","ReactDOM","render","path","component","NavBar","exact","ToolPage","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb4bd448.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/henry.627331a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spreadsheet.111f5fbd.png\";","module.exports = __webpack_public_path__ + \"static/media/form.e7fa7588.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\n\nconst Wrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Downloads = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DownloadButton = styled(\"div\")`\n  margin-top: 3vh;\n  border: black 1.5px solid;\n  text-align: center;\n  padding: 1vh 1vw;\n  align-self: center;\n  cursor: pointer;\n  transition: 0.1s;\n  margin: auto 2vw;\n  &:hover {\n    border: #00b4f5 1.5px solid;\n    color: #00b4f5;\n  }\n`;\n\nconst Preview = styled(\"div\")`\n  overflow: scroll;\n  margin-top: 3vh;\n`;\n\nconst Table = styled(\"table\")`\n  border: 1px solid black;\n  border-collapse: collapse;\n`;\n\nconst Trow = styled(\"tr\")`\n  border: 1px solid black;\n`;\n\ninterface ResultsProps {\n  data: any;\n}\n\nexport default class Results extends React.Component<\n  ResultsProps,\n  { blob: any; rows: any }\n> {\n  constructor(props) {\n    super(props);\n    this.downloadXLSX = this.downloadXLSX.bind(this);\n    this.downloadCSV = this.downloadCSV.bind(this);\n  }\n\n  componentWillMount() {\n    let arr = [this.props.data[\"columns\"]];\n    let matches = [];\n\n    for (let i = 0; i < this.props.data[\"matches\"].length; i++) {\n      let obj = this.props.data[\"matches\"][i];\n      let tempArr = [obj[\"Name\"], obj[\"Email\"]];\n      for (let j = 0; j < obj[\"Matches\"].length; j++)\n        tempArr.push(obj[\"Matches\"][j]);\n      matches.push(tempArr);\n    }\n    arr = arr.concat(matches);\n\n    // convert to xlsx\n    let ws = XLSX.utils.aoa_to_sheet(arr);\n    let wb = XLSX.utils.book_new();\n    wb.SheetNames.push(\"Workshop Assignments\");\n    wb.Sheets[\"Workshop Assignments\"] = ws;\n\n    let wbout = XLSX.write(wb, { bookType: \"xlsx\", type: \"binary\" });\n    var buf = new ArrayBuffer(wbout.length); //convert s to arrayBuffer\n    var view = new Uint8Array(buf); //create uint8array as viewer\n    for (var i = 0; i < wbout.length; i++) view[i] = wbout.charCodeAt(i) & 0xff; //convert to octet\n\n    this.setState({\n      blob: new Blob([buf], { type: \"application/octet-stream\" }),\n      rows: matches\n    });\n  }\n\n  downloadXLSX() {\n    saveAs(this.state.blob, \"wsAssignments.xlsx\");\n  }\n\n  downloadCSV() {\n    var csv = this.props.data[\"columns\"].join(\",\") + \"\\r\\n\";\n    this.state.rows.forEach(row => {\n      csv += row.join(\",\") + \"\\r\\n\";\n    });\n\n    var hiddenLink = document.createElement(\"a\");\n    hiddenLink.href = \"data:text/csv;charset=utf-8,\" + encodeURI(csv);\n    hiddenLink.target = \"_blank\";\n    hiddenLink.download = \"wsAssignments.csv\";\n    hiddenLink.click();\n  }\n\n  render() {\n    return (\n      <>\n        <Wrapper>\n          <Downloads>\n            <DownloadButton onClick={this.downloadCSV}>\n              Download CSV\n            </DownloadButton>\n            <DownloadButton onClick={this.downloadXLSX}>\n              Download Excel\n            </DownloadButton>\n          </Downloads>\n          <Preview>\n            <Table>\n              <Trow>\n                {this.props.data[\"columns\"].map(column => (\n                  <th\n                    style={{\n                      border: \"1px solid black\",\n                      borderCollapse: \"collapse\",\n                      padding: \"5px 15px\"\n                    }}\n                  >\n                    {column}\n                  </th>\n                ))}\n              </Trow>\n              {this.state.rows.map(row => (\n                <Trow>\n                  {row.map(item => (\n                    <td\n                      style={{\n                        border: \"1px solid black\",\n                        borderCollapse: \"collapse\",\n                        paddingTop: \"3px\",\n                        paddingBottom: \"3px\"\n                      }}\n                    >\n                      {item}\n                    </td>\n                  ))}\n                </Trow>\n              ))}\n            </Table>\n          </Preview>\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaPlusCircle, FaMinusCircle } from \"react-icons/fa\";\nimport { EOL } from \"os\";\n\nimport Results from \"./Results\";\n\nconst Wrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  border: black solid 2px;\n  padding: 2vw;\n  font-family: \"Montserrat\", sans-serif;\n  width: 40%;\n  @media only screen and (max-width: 700px) {\n    width: 65%;\n  }\n  @media only screen and (max-width: 550px) {\n    width: 75%;\n  }\n`;\n\nconst Guide = styled(\"p\")`\n  text-align: center;\n  align-self: center;\n  font-size: 15px;\n  @media only screen and (max-width: 700px) {\n    font-size: 12px;\n  }\n`;\n\nconst UploadDiv = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n`;\nconst UploadInput = styled(\"input\")`\n  text-align: center;\n`;\n\nconst UploadWarning = styled(\"p\")`\n  font-size: 1vw;\n  margin-right: 2vw;\n  @media only screen and (max-width: 800px) {\n    font-size: 10px;\n  }\n`;\n\nconst Separator = styled(\"hr\")`\n  color: black;\n  width: 100%;\n`;\n\nconst SeriesInputDiv = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SeriesTitle = styled(\"p\")`\n  @media only screen and (max-width: 800px) {\n    font-size: 12px;\n  }\n`;\n\nconst Series = styled(\"div\")`\n  display: flex;\n  margin-bottom: 1vh;\n  justify-content: space-between;\n  width: 25%;\n  @media only screen and (max-width: 1100px) {\n    width: 30%;\n  }\n  @media only screen and (max-width: 900px) {\n    width: 35%;\n  }\n  @media only screen and (max-width: 500px) {\n    width: 40%;\n  }\n  @media only screen and (max-width: 400px) {\n    width: 50%;\n  }\n`;\n\nconst SeriesLabel = styled(\"p\")`\n  font-size: 1vw;\n  margin: auto 0px;\n  @media only screen and (max-width: 800px) {\n    font-size: 10px;\n  }\n`;\n\nconst SeriesNumInput = styled(\"input\")`\n  line-height: 1;\n`;\n\nconst ButtonDiv = styled(\"div\")`\n  display: flex;\n  width: 100%;\n  margin-bottom: 2vh;\n`;\n\nconst Plus = styled(FaPlusCircle)`\n  height: 1.6em;\n  width: 1.6em;\n  cursor: pointer;\n  &:hover {\n    color: #00b4f5;\n  }\n  @media only screen and (max-width: 800px) {\n    height: 20px;\n    width: 20px;\n  }\n`;\n\nconst Minus = styled(FaMinusCircle)`\n  height: 1.6em;\n  width: 1.6em;\n  margin-right: 10px;\n  cursor: pointer;\n  &:hover {\n    color: #00b4f5;\n  }\n  @media only screen and (max-width: 800px) {\n    height: 20px;\n    width: 20px;\n  }\n`;\n\nconst SubmitButton = styled(\"div\")`\n  margin-top: 3vh;\n  border: black 1.5px solid;\n  text-align: center;\n  padding: 1vh 1vw;\n  width: 30%;\n  align-self: center;\n  cursor: pointer;\n  transition: 0.1s;\n  &:hover {\n    border: #00b4f5 1.5px solid;\n    color: #00b4f5;\n  }\n  @media only screen and (max-width: 800px) {\n    font-size: 13px;\n  }\n`;\n\nexport default class WorkshopForm extends React.Component<\n  {},\n  { numSeries: number; PrefFile: any; matches: any; loading: boolean }\n> {\n  constructor(props) {\n    super(props);\n    this.renderseries = this.renderseries.bind(this);\n    this.updateSeries = this.updateSeries.bind(this);\n    this.addSeries = this.addSeries.bind(this);\n    this.deleteSeries = this.deleteSeries.bind(this);\n    this.storeFile = this.storeFile.bind(this);\n    this.parseAndSend = this.parseAndSend.bind(this);\n    this.set = this.set.bind(this);\n  }\n\n  series = [1];\n\n  componentWillMount() {\n    this.setState({\n      numSeries: 1,\n      PrefFile: null,\n      loading: false\n    });\n  }\n\n  updateSeries(e) {\n    this.series[e.target.dataset.id] = parseInt(e.target.value);\n    console.log(this.series);\n  }\n\n  addSeries() {\n    this.setState({\n      numSeries: this.state.numSeries + 1\n    });\n    this.series.push(1);\n  }\n\n  deleteSeries() {\n    if (this.state.numSeries === 1) return;\n    this.setState({\n      numSeries: this.state.numSeries - 1\n    });\n    this.series.pop();\n  }\n\n  renderseries() {\n    let series = [];\n    for (let i = 0; i < this.state.numSeries; i++) {\n      series.push(\n        <Series>\n          <SeriesLabel>Series {i + 1}</SeriesLabel>\n          <SeriesNumInput\n            type=\"number\"\n            min=\"1\"\n            max=\"100000\"\n            data-id={i}\n            onChange={this.updateSeries}\n          ></SeriesNumInput>\n        </Series>\n      );\n    }\n    return series;\n  }\n\n  storeFile(e) {\n    this.setState({\n      PrefFile: e.target.files[0]\n    });\n  }\n\n  set(value, state) {\n    switch (state) {\n      case \"matches\":\n        this.setState({\n          matches: value\n        });\n        break;\n      case \"loading\":\n        this.setState({\n          loading: value\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  parseAndSend() {\n    let reader = new FileReader();\n    let arr = this.series;\n    let set = this.set;\n    this.setState({\n      loading: true\n    });\n    reader.onload = async function() {\n      await fetch(\"https://thenry3.pythonanywhere.com/api/sort\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          rows: reader.result\n            .toString()\n            .replace(/['\"]+/g, \"\")\n            .split(\"\\r\" + EOL)\n            .map(row => row.split(\",\")),\n          workshopsToAttend: arr\n        })\n      })\n        .then(response =>\n          response.json().then(data => ({\n            data: data,\n            status: response.status\n          }))\n        )\n        .then(res => {\n          if (res.status == 400) console.log(\"YOU FUCKED UP\");\n          else {\n            set(res.data, \"matches\");\n            set(false, \"loading\");\n          }\n        });\n    };\n    reader.readAsBinaryString(this.state.PrefFile);\n  }\n\n  render() {\n    if (this.state.matches)\n      return <Results data={this.state.matches}></Results>;\n    if (this.state.loading) return <p>LOADING MY DICK</p>;\n    return (\n      <>\n        <Wrapper>\n          <Guide>if y'all haven't read the guidelines, FUCKING READ IT</Guide>\n          <UploadDiv>\n            <UploadWarning>\n              File uploaded <strong>MUST</strong> be in CSV format\n            </UploadWarning>\n            <UploadInput\n              type=\"file\"\n              accept=\".csv\"\n              required\n              onChange={this.storeFile}\n            ></UploadInput>\n          </UploadDiv>\n          <Separator></Separator>\n          <SeriesInputDiv>\n            <SeriesTitle>\n              Input the number of workshops that students will be attending for\n              each series\n            </SeriesTitle>\n            <ButtonDiv>\n              <Minus onClick={this.deleteSeries} />\n              <Plus onClick={this.addSeries} />\n            </ButtonDiv>\n            {this.renderseries()}\n          </SeriesInputDiv>\n          <SubmitButton onClick={this.parseAndSend}>Submit</SubmitButton>\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport WorkshopForm from \"../components/WorkshopForm\";\n\nconst PageWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: \"Montserrat\", sans-serif;\n`;\n\nconst Header = styled(\"p\")`\n  font-size: 3vw;\n  font-weight: bold;\n  text-align: center;\n  @media only screen and (max-width: 700px) {\n    font-size: 20px;\n    width: 90%;\n  }\n`;\n\nexport default class Toolpage extends React.Component {\n  render() {\n    return (\n      <>\n        <PageWrapper>\n          <Header>wow ty for using my shit</Header>\n          <WorkshopForm></WorkshopForm>\n        </PageWrapper>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\n\nconst NavWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  font-family: \"Montserrat\", sans-serif;\n  align-items: center;\n`;\n\nconst Item = styled(Link)`\n  font-size: 1.1vw;\n  letter-spacing: 0.1em;\n  color: black;\n  text-decoration: none;\n  @media only screen and (max-width: 700px) {\n    font-size: 11px;\n  }\n`;\n\nconst NavLinks = styled(\"div\")`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ItemName = styled(\"p\")`\n  margin: auto 1vw;\n  padding: 4vh 2vw;\n  ${Item}:hover & {\n    color: #00b4f5;\n    border-bottom: solid #00b4f5 1px;\n    padding-bottom: 3vh;\n  }\n`;\n\nconst Title = styled(\"p\")`\n  margin-left: 2vw;\n  text-align: center;\n  font-size: 2.2vw;\n  @media only screen and (max-width: 700px) {\n    font-size: 16px;\n  }\n`;\n\nexport default class Navbar extends React.Component<RouteComponentProps> {\n  refreshTool() {\n    // if (useLocation().pathname == \"/\") window.location.reload();\n    if (this.props.location.pathname === \"/\") window.location.reload();\n  }\n  render() {\n    return (\n      <>\n        <NavWrapper>\n          <Title>UCLA VSU</Title>\n          <NavLinks>\n            <Item to=\"/\" onClick={this.refreshTool.bind(this)}>\n              <ItemName>Tool</ItemName>\n            </Item>\n            <Item to=\"/guidelines\">\n              <ItemName>Guidelines</ItemName>\n            </Item>\n            <Item to=\"/about\">\n              <ItemName>About</ItemName>\n            </Item>\n          </NavLinks>\n        </NavWrapper>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Henry from \"../images/henry.jpg\";\n\nconst Page = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: \"Montserrat\", sans-serif;\n`;\n\nconst ProfilePic = styled(\"div\")`\n  width: 300px;\n  height: 300px;\n  background: url(${Henry});\n  background-position-x: 70%;\n  background-position-y: 50%;\n  background-size: cover;\n  margin-top: 4.5vh;\n  border-radius: 50%;\n  @media only screen and (max-width: 1000px) {\n    width: 250px;\n    height: 250px;\n  }\n  @media only screen and (max-width: 700px) {\n    width: 225px;\n    height: 225px;\n  }\n`;\n\nconst Quote = styled(\"p\")`\n  width: 35%;\n  margin-top: 3vh;\n  text-align: center;\n  font-size: 16px;\n  @media only screen and (max-width: 700px) {\n    font-size: 12px;\n    width: 50%;\n  }\n  @media only screen and (max-width: 600px) {\n    width: 60%;\n  }\n`;\n\nconst Name = styled(\"p\")`\n  font-size: 24px;\n  text-align: right;\n  width: 40%;\n  margin-top: 0px;\n  @media only screen and (max-width: 700px) {\n    font-size: 20px;\n    width: 60%;\n  }\n  @media only screen and (max-width: 600px) {\n    font-size: 16px;\n    width: 75%;\n  }\n`;\n\nexport default class AboutPage extends React.Component {\n  render() {\n    return (\n      <>\n        <Page>\n          <ProfilePic></ProfilePic>\n          <Quote>\n            \"This website is the story of how two High School Conference\n            workshop coordinators made their fellow Computer Science friend do\n            beep boop beep\"\n          </Quote>\n          <Name>- Henry Trinh '22</Name>\n        </Page>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DarkBack = styled(\"div\")`\n  background: rgba(0, 0, 0, 0.65);\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Pic = styled(\"img\")`\n  max-width: 65%;\n  max-height: 65%;\n`;\n\ninterface OverlayProps {\n  src: any;\n  id: string;\n}\n\nexport default class Overlay extends React.Component<OverlayProps> {\n  close(e) {\n    if (e.target == e.currentTarget)\n      document.getElementById(this.props.id).style.height = \"0vh\";\n  }\n  render() {\n    return (\n      <>\n        <DarkBack\n          id={this.props.id}\n          onClick={this.close.bind(this)}\n          style={{ height: \"0vh\" }}\n        >\n          <Pic src={this.props.src}></Pic>\n        </DarkBack>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Overlay from \"./Overlay\";\n\nconst Card = styled(\"ul\")`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  border: 3px solid black;\n  font-family: \"Montserrat\", sans-serif;\n  cursor: pointer;\n  transition: 0.2s;\n  padding-left: 3vw;\n  padding-right: 3vw;\n  margin: 6vh 3vw;\n  position: relative;\n  &:hover {\n    border: 3px solid #00b4f5;\n    background: rgba(0, 180, 245, 0.1);\n    transform: translateY(-1.5vh);\n  }\n  @media only screen and (max-width: 700px) {\n    width: 80%;\n  }\n  @media only screen and (max-width: 600px) {\n    width: 90%;\n  }\n`;\n\nconst CardTitle = styled(\"p\")`\n  text-align: center;\n  font-size: 1.7vw;\n  align-self: center;\n  @media only screen and (max-width: 1000px) {\n    font-size: 23px;\n  }\n`;\n\nconst Point = styled(\"li\")`\n  margin-bottom: 1.5vh;\n  font-size: 1vw;\n  @media only screen and (max-width: 1000px) {\n    font-size: 11px;\n  }\n`;\n\ninterface CardProps {\n  title: string;\n  points: string[];\n  overlay: any;\n}\n\nexport default class GuideCard extends React.Component<CardProps> {\n  openClose() {\n    document.getElementById(this.props.title).style.height =\n      document.getElementById(this.props.title).style.height == \"0vh\"\n        ? \"100vh\"\n        : \"0vh\";\n  }\n\n  render() {\n    return (\n      <>\n        <Card onClick={this.openClose.bind(this)}>\n          <CardTitle>{this.props.title}</CardTitle>\n          {this.props.points.map(point => (\n            <Point>{point}</Point>\n          ))}\n        </Card>\n        <Overlay src={this.props.overlay} id={this.props.title}></Overlay>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Spread from \"../images/spreadsheet.png\";\nimport Form from \"../images/form.png\";\n\nimport GuideCard from \"../components/GuideCard\";\n\nconst Wrapper = styled(\"div\")`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  @media only screen and (max-width: 700px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst spread = [\n  \"Use Google Forms to make the spreadsheet with preferences!\",\n  \"First three columns must be Timestamp, Name, and Email, respectively\",\n  \"Make sure each column is in the format --> Series <#>: <Series Name> [<1st, 2nd, etc.> choice]\",\n  \"Click on this card for an example of a proper google sheets layout\"\n];\n\nconst form = [\n  \"THIS IS MORE IMPORTANT TO FOLLOW BECAUSE GOOGLE SHEET FORMATS ARE AUTO-GENERATED FROM GOOGLE FORMS\",\n  \"In order of questions: Name, Email, Workshop preferences for each series\",\n  \"Name and Email fields must be short answer text\",\n  \"Each series should be a multiple choice grid\",\n  \"Rows are 1st choice, 2nd choice, 3rd choice, etc. <-- THESE MUST BE IN ORDER TOP TO BOTTOM\",\n  \"Columns are corresponding workshop names for each series\",\n  \"Click on this card for an example of a proper google form layout\"\n];\n\nexport default class GuidePage extends React.Component {\n  render() {\n    return (\n      <>\n        <Wrapper>\n          <GuideCard title=\"Google Form Format\" points={form} overlay={Form} />\n\n          <GuideCard\n            title=\"Spreadsheet Format\"\n            points={spread}\n            overlay={Spread}\n          ></GuideCard>\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route } from \"react-router\";\n\nimport ToolPage from \"./pages/Toolpage\";\nimport NavBar from \"./components/NavBar\";\nimport AboutPage from \"./pages/AboutPage\";\nimport GuidePage from \"./pages/GuidePage\";\n\nReactDOM.render(\n  <>\n    <Router>\n      <Route path=\"/\" component={NavBar} />\n      <Route exact path=\"/\" component={ToolPage}></Route>\n      <Route path=\"/about\" component={AboutPage}></Route>\n      <Route path=\"/guidelines\" component={GuidePage}></Route>\n    </Router>\n  </>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}